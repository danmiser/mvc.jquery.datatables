@{
    ViewBag.Title = "title";
}

@Html.DataTableIncludes(jqueryUi:false)
<script type="text/javascript" src="http://balupton.github.com/jquery-syntaxhighlighter/scripts/jquery.syntaxhighlighter.min.js"></script>
<script type="text/javascript">    $.SyntaxHighlighter.init();</script>

<h1>Strongly typed datatable example</h1>
<pre>
Nuget install-package Mvc.JQuery.Datatables
</pre>
<p>
    In the controller:
</p>
<pre class="highlight">
public DataTablesResult&lt;UserView&gt; GetUsers(DataTablesParam dataTableParam)
{
    var users = new List&lt;User&gt;
    (
        Enumerable.Range(1, 100).Select(i =&gt; new User(){Id = i, Email = "user" + i + "@@gmail.com", Name = "User" + i})
    ).AsQueryable();

    return DataTablesResult.Create(users, dataTableParam, user =&gt; new UserView()
    {
        Id = user.Id,
        Name = user.Name
    });
}
</pre>

<p>
and in the view...

<pre class="highlight">
@@Html.DataTableIncludes(jqueryUi:false)

 ...

@@using Mvc.JQuery.Datatables
@@using Mvc.JQuery.Datatables.Example.Controllers

@@Html.Partial("DataTable", Html.DataTableVm("table-id", (HomeController h) => h.GetUsers(null)))

you can also use 

@@Html.Partial("DataTable", Html.DataTableVm("table-id", "/home/getusers", "Id", "Name", "Email"))
</pre>
</p>

<h1>Voila</h1>
@using Mvc.JQuery.Datatables
@using Mvc.JQuery.Datatables.Example.Controllers
@{
    var vm = Html.DataTableVm("table-id", (HomeController h) => h.GetUsers(null));
    vm.FilterOn("Position").Select("Engineer", "Tester", "Manager")
      .FilterOn("Id").NumberRange();
}
@Html.Partial("DataTable", vm)








